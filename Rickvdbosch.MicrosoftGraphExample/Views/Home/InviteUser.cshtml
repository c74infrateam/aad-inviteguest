@model Rickvdbosch.MicrosoftGraphExample.Models.InviteUserModel

@{
    ViewData["Title"] = "Invite user";
}

<h2>Invite user</h2>

<div class="row">
    <div class="col-md-8">
        <form asp-action="InviteUser">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="DisplayName" class="control-label"></label>
                <input asp-for="DisplayName" class="form-control" />
                <span asp-validation-for="DisplayName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="EmailAddress" class="control-label"></label>
                <input asp-for="EmailAddress" class="form-control" />
                <span asp-validation-for="EmailAddress" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="InviteMessage" class="control-label"></label>
                <input asp-for="InviteMessage" class="form-control" />
                <span asp-validation-for="InviteMessage" class="text-danger"></span>
            </div>
            <div class="form-group">
                <div class="checkbox">
                    <label>
                        <input asp-for="SendInviteMessage" /> @Html.DisplayNameFor(model => model.SendInviteMessage)
                    </label>
                </div>
            </div>

            @if (Model?.Status != null)
            {
                <h3>The user was invited. Current status:</h3>
                <h4>@Model.Status</h4>
            }
            else
            {
                <div class="form-group">
                    <input type="submit" value="Invite" class="btn btn-default" />
                </div>
            }
        </form>
    </div>
</div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}